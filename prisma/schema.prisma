// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Election {
  id     Int            @id @db.Integer
  date   DateTime       @db.Date
  type   ElectionType
  method ElectionMethod
  // PartyParticipation     PartyParticipation[]
  // CandidateParticipation CandidateParticipation[]
}

// model PartyParticipation {
//   Election    Election   @relation(fields: [electionId], references: [id])
//   electionId  String
//   Parties     Party      @relation(fields: [partyId], references: [id])
//   partyId     String
//   Candidate   Candidate? @relation(fields: [candidateId], references: [id])
//   candidateId String?

//   @@id([electionId, partyId])
// }

// model CandidateParticipation {
//   Election    Election  @relation(fields: [electionId], references: [id])
//   electionId  String
//   Candidates  Candidate @relation(fields: [candidateId], references: [id])
//   candidateId String
//   Party       Party?    @relation(fields: [partyId], references: [id])
//   partyId     String?

//   @@id([electionId, candidateId])
// }

model Coligation {
  id            Int     @id @db.Integer
  name          String
  acronym       String
  photoFileName String
  Parties       Party[]
}

model Party {
  id            Int         @id @db.Integer
  name          String
  acronym       String
  photoFileName String
  Coligation    Coligation? @relation(fields: [coligationId], references: [id])
  coligationId  Int?
  Candidates    Candidate[]
  // Participation      CandidateParticipation[]
  // PartyParticipation PartyParticipation[]
}

model Candidate {
  id                Int             @id @db.Integer
  shortName         String
  fullName          String
  birthdate         DateTime        @db.Date
  photoFileName     String?
  bio               String?
  position          Int?
  isSub             Boolean?
  ElectoralCircle   ElectoralCircle @relation(fields: [electoralCircleId], references: [id])
  electoralCircleId Int
  Party             Party           @relation(fields: [partyId], references: [id])
  partyId           Int
  // Participation      CandidateParticipation[]
  // PartyParticipation PartyParticipation[]
}

model ElectoralCircle {
  id              Int         @id @db.Integer
  name            String
  electedDeputies Int
  Candidate       Candidate[]
}

enum ElectionType {
  AUTARQUICA
  LEGISLATIVA
  PRESIDENCIAL
}

enum ElectionMethod {
  D_HONDT
}
